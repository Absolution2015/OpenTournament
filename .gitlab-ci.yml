variables:
  GIT_STRATEGY: none
  GIT_CHECKOUT: "false"
  BRANCH_DEVELOPMENT: 'development-placeholder'
  BRANCH_TESTING: 'testing'
  BRANCH_STAGING: 'staging'
  BRANCH_PRODUCTION: 'production'
  PACKAGE_TARGET: 'Null'
  PACKAGE_CONFIGURATION: 'Null'
  PACKAGE_PLATFORM: 'Null'
  COMMAND: 'Null'

stages:
  - validate
  - build
  - cook
  - stage
  - safeguard
  - archive
  - upload

.template:
  script: [ 'Write-Host | PowerShell -File `"$CI_PROJECT_DIR\Automation\Automation.ps1`" `"C:\UE\Engine`" `"$CI_PROJECT_DIR`" OpenTournament $PACKAGE_TARGET $PACKAGE_CONFIGURATION $PACKAGE_PLATFORM $COMMAND' ]

# This pipeline runs on $BRANCH_DEVELOPMENT, on every commit.
#
# validate

# This pipeline runs on $BRANCH_DEVELOPMENT, on a daily schedule.
#
# validate
# build
#   config #1
#   config #2
#   etc.
# cook
#   config #1
#   config #2
#   etc.
# stage
#   config #1
#   config #2
#   etc.
# safeguard
#   config #1
#   config #2
#   etc.
# archive
#   config #1
#   config #2
#   etc.
# upload
#   config #1
#   config #2
#   etc.

# TO-DO - This pipeline runs on $BRANCH_TESTING, on every merge from $BRANCH_DEVELOPMENT.

# TO-DO - This pipeline runs on $BRANCH_STAGING, on every merge from $BRANCH_TESTING.

# TO-DO - This pipeline runs on $BRANCH_PRODUCTION, on every manual trigger.


# --------------------------------------------------
#     Validate
# --------------------------------------------------

validate:
  extends: .template
  stage: validate
  variables:
    GIT_STRATEGY: fetch
    GIT_CHECKOUT: "true"
    COMMAND: 'Validate'

# --------------------------------------------------
#     Build
# --------------------------------------------------

build_client_development_win64:
  extends: .template
  stage: build
  variables:
    PACKAGE_TARGET: 'Client'
    PACKAGE_CONFIGURATION: 'Development'
    PACKAGE_PLATFORM: 'Win64'
    COMMAND: 'Build'
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

build_server_development_win64:
  extends: .template
  stage: build
  variables:
    PACKAGE_TARGET: 'Server'
    PACKAGE_CONFIGURATION: 'Development'
    PACKAGE_PLATFORM: 'Win64'
    COMMAND: 'Build'
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

build_server_development_linux:
  extends: .template
  stage: build
  variables:
    PACKAGE_TARGET: 'Server'
    PACKAGE_CONFIGURATION: 'Development'
    PACKAGE_PLATFORM: 'Linux'
    COMMAND: 'Build'
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

# --------------------------------------------------
#     Cook
# --------------------------------------------------

cook_client_development_win64:
  extends: .template
  stage: cook
  variables:
    PACKAGE_TARGET: 'Client'
    PACKAGE_CONFIGURATION: 'Development'
    PACKAGE_PLATFORM: 'Win64'
    COMMAND: 'Cook'
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

cook_server_development_win64:
  extends: .template
  stage: cook
  variables:
    PACKAGE_TARGET: 'Server'
    PACKAGE_CONFIGURATION: 'Development'
    PACKAGE_PLATFORM: 'Win64'
    COMMAND: 'Cook'
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

cook_server_development_linux:
  extends: .template
  stage: cook
  variables:
    PACKAGE_TARGET: 'Server'
    PACKAGE_CONFIGURATION: 'Development'
    PACKAGE_PLATFORM: 'Linux'
    COMMAND: 'Cook'
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

# --------------------------------------------------
#     Stage
# --------------------------------------------------

stage_client_development_win64:
  extends: .template
  stage: stage
  variables:
    PACKAGE_TARGET: 'Client'
    PACKAGE_CONFIGURATION: 'Development'
    PACKAGE_PLATFORM: 'Win64'
    COMMAND: 'Stage'
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

stage_server_development_win64:
  extends: .template
  stage: stage
  variables:
    PACKAGE_TARGET: 'Server'
    PACKAGE_CONFIGURATION: 'Development'
    PACKAGE_PLATFORM: 'Win64'
    COMMAND: 'Stage'
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

stage_server_development_linux:
  extends: .template
  stage: stage
  variables:
    PACKAGE_TARGET: 'Server'
    PACKAGE_CONFIGURATION: 'Development'
    PACKAGE_PLATFORM: 'Linux'
    COMMAND: 'Stage'
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

# --------------------------------------------------
#     Safeguard
# --------------------------------------------------


# --------------------------------------------------
#     Archive
# --------------------------------------------------

archive_client_development_win64:
  extends: .template
  stage: archive
  variables:
    PACKAGE_TARGET: 'Client'
    PACKAGE_CONFIGURATION: 'Development'
    PACKAGE_PLATFORM: 'Win64'
    COMMAND: 'Archive'
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

archive_server_development_win64:
  extends: .template
  stage: archive
  variables:
    PACKAGE_TARGET: 'Server'
    PACKAGE_CONFIGURATION: 'Development'
    PACKAGE_PLATFORM: 'Win64'
    COMMAND: 'Archive'
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

archive_server_development_linux:
  extends: .template
  stage: archive
  variables:
    PACKAGE_TARGET: 'Server'
    PACKAGE_CONFIGURATION: 'Development'
    PACKAGE_PLATFORM: 'Linux'
    COMMAND: 'Archive'
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

# --------------------------------------------------
#     Upload
# --------------------------------------------------

upload_client_development_win64:
  extends: .template
  stage: upload
  script: [ 'Write-Output "Uploading..."' ]
  artifacts:
    paths: [ '%CI_PROJECT_DIR%\Packages\OpenTournament-Client-Development-Win64.zip' ]
    expire_in: 1 week
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

upload_server_development_win64:
  extends: .template
  stage: upload
  script: [ 'Write-Output "Uploading..."' ]
  artifacts:
    paths: [ '%CI_PROJECT_DIR%\Packages\OpenTournament-Server-Development-Win64.zip' ]
    expire_in: 1 week
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"
   
upload_server_development_linux:
  extends: .template
  stage: upload
  script: [ 'Write-Output "Uploading..."' ]
  artifacts:
    paths: [ '%CI_PROJECT_DIR%\Packages\OpenTournament-Server-Development-Linux.zip' ]
    expire_in: 1 week
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"
         