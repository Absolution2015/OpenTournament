variables:
  GIT_STRATEGY: none
  GIT_CHECKOUT: "false"
  BRANCH_DEVELOPMENT: 'development-placeholder'
  BRANCH_TESTING: 'testing'
  BRANCH_STAGING: 'staging'
  BRANCH_PRODUCTION: 'production'
  SCRIPT: '"$CI_PROJECT_DIR\Automation\Windows\Scripts\Automation.bat" "C:\UE\Engine\" "$CI_PROJECT_DIR\"'

stages:
  - assemble
  - validate
  - build
  - cook
  - stage
  - safeguard
  - lighting
  - archive
  - upload

# This pipeline runs on $BRANCH_DEVELOPMENT, on every commit.
#
# assemble
# validate
#   source
#   content

# This pipeline runs on $BRANCH_DEVELOPMENT, on a daily schedule.
#
# assemble
# build
#   config #1
#   config #2
#   etc.
# cook
#   config #1
#   config #2
#   etc.
# stage
#   config #1
#   config #2
#   etc.
# safeguard
#   config #1
#   config #2
#   etc.
# archive
#   config #1
#   config #2
#   etc.
# upload
#   config #1
#   config #2
#   etc.

# TO-DO - This pipeline runs on $BRANCH_TESTING, on every merge from $BRANCH_DEVELOPMENT.

# TO-DO - This pipeline runs on $BRANCH_STAGING, on every merge from $BRANCH_TESTING.

# TO-DO - This pipeline runs on $BRANCH_PRODUCTION, on every manual trigger.

# --------------------------------------------------
#     Assemble
# --------------------------------------------------

assemble:
  stage: assemble
  script: [ call %SCRIPT% Assemble ]
  variables:
    GIT_STRATEGY: fetch
    GIT_CHECKOUT: "true"

# --------------------------------------------------
#     Validate
# --------------------------------------------------

validate_source:
  stage: validate
  script: [ echo Temporarily implemented in <Assemble> ]
#  script: [ call %SCRIPT% Validate Source ]
  except:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

validate_content:
  stage: validate
  script: [ echo Temporarily implemented in <Assemble> ]
#  script: [ call %SCRIPT% Validate Content ]
  except:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"
    
# --------------------------------------------------
#     Build
# --------------------------------------------------

build_client_development_win64:
  stage: build
  script: [ call %SCRIPT% Build Client Development Win64 ]
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

build_server_development_win64:
  stage: build
  script: [ call %SCRIPT% Build Server Development Win64 ]
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

# --------------------------------------------------
#     Cook
# --------------------------------------------------

cook_client_development_win64:
  stage: cook
  script: [ call %SCRIPT% Cook Client Development Win64 ]
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

cook_server_development_win64:
  stage: cook
  script: [ call %SCRIPT% Cook Server Development Win64 ]
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

# --------------------------------------------------
#     Stage
# --------------------------------------------------

stage_client_development_win64:
  stage: stage
  script: [ call %SCRIPT% Stage Client Development Win64 ]
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

stage_server_development_win64:
  stage: stage
  script: [ call %SCRIPT% Stage Server Development Win64 ]
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

# --------------------------------------------------
#     Safeguard
# --------------------------------------------------


lighting_client_development_win64:
  stage: lighting
  script: [ call %SCRIPT% Lighting Client Development Win64 ]
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"
lighting_server_development_win64:
  stage: lighting
  script: [ call %SCRIPT% Lighting Server Development Win64 ]
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"


# --------------------------------------------------
#     Archive
# --------------------------------------------------

archive_client_development_win64:
  stage: archive
  script: [ call %SCRIPT% Archive Client Development Win64 ]
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

archive_server_development_win64:
  stage: archive
  script: [ call %SCRIPT% Archive Server Development Win64 ]
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

# --------------------------------------------------
#     Upload
# --------------------------------------------------

upload_client_development_win64:
  stage: upload
  script: [ echo Uploading... ]
  artifacts:
    paths: [ '%CI_PROJECT_DIR%\Output\Archived\Client\Development\Win64' ]
    expire_in: 1 week
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"

upload_server_development_win64:
  stage: upload
  script: [ echo Uploading... ]
  artifacts:
    paths: [ '%CI_PROJECT_DIR%\Output\Archived\Server\Development\Win64' ]
    expire_in: 1 week
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule"
      