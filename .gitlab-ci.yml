variables:
  GIT_STRATEGY: none
  GIT_CHECKOUT: "false"
  BRANCH_DEVELOPMENT: 'development-placeholder'
  BRANCH_TESTING: 'testing'
  BRANCH_STAGING: 'staging'
  BRANCH_PRODUCTION: 'production'
  PACKAGE_TARGET: 'Null'
  PACKAGE_CONFIGURATION: 'Null'
  PACKAGE_PLATFORM: 'Null'
  COMMAND: '$CI_JOB_STAGE'

stages:
  - Assemble
  - Build
  - Cook
  - Stage
  - Safeguard
  - Upload

# ----------------------------------------------------------------------------------------------------
#     Pipelines
# ----------------------------------------------------------------------------------------------------

# This pipeline runs on $BRANCH_DEVELOPMENT, on every commit.
#
# assemble

# This pipeline runs on $BRANCH_DEVELOPMENT, on a daily schedule.
#
# assemble
# build
#   config #1
#   config #2
#   etc.
# cook
#   config #1
#   config #2
#   etc.
# stage
#   config #1
#   config #2
#   etc.
# upload

# TO-DO - This pipeline runs on $BRANCH_TESTING, on every merge from $BRANCH_DEVELOPMENT.

# TO-DO - This pipeline runs on $BRANCH_STAGING, on every merge from $BRANCH_TESTING.

# TO-DO - This pipeline runs on $BRANCH_PRODUCTION, on every manual trigger.

# --------------------------------------------------
#     Jobs (Templates)
# --------------------------------------------------

.template:
  script: [ 'PowerShell -File `"$CI_BUILDS_DIR\..\Automation\Automation-Commands.ps1`" -Command $COMMAND -TargetType $PACKAGE_TARGET -TargetConfiguration $PACKAGE_CONFIGURATION -TargetPlatform $PACKAGE_PLATFORM -Identifier $CI_PIPELINE_ID' ]

# Clients

.template_client:
  extends: .template
  variables:
    PACKAGE_TARGET: 'Client'

.template_client_development:
  extends: .template_client
  variables:
    PACKAGE_CONFIGURATION: 'Development'

.template_client_development_win64:
  extends: .template_client_development
  variables:
    PACKAGE_PLATFORM: 'Win64'

.template_client_development_linux:
  extends: .template_client_development
  variables:
    PACKAGE_PLATFORM: 'Linux'

# Servers

.template_server:
  extends: .template
  variables:
    PACKAGE_TARGET: 'Server'

.template_server_development:
  extends: .template_server
  variables:
    PACKAGE_CONFIGURATION: 'Development'

.template_server_development_win64:
  extends: .template_server_development
  variables:
    PACKAGE_PLATFORM: 'Win64'

.template_server_development_linux:
  extends: .template_server_development
  variables:
    PACKAGE_PLATFORM: 'Linux'

# --------------------------------------------------
#     Jobs
# --------------------------------------------------

# Assemble

assemble:
  extends: .template
  stage: assemble
  variables:
    GIT_STRATEGY: fetch
    GIT_CHECKOUT: "true"
    COMMAND: 'Assemble'

# Build

build_client_development_win64:
  extends: .template_client_development_win64
  stage: build

build_server_development_win64:
  extends: .template_server_development_win64
  stage: build

#build_client_development_linux:
#  extends: .template_client_development_linux
#  stage: build
#
#build_server_development_linux:
#  extends: .template_server_development_linux
#  stage: build

# Cook

cook_client_development_win64:
  extends: .template_client_development_win64
  stage: cook

cook_server_development_win64:
  extends: .template_server_development_win64
  stage: cook

#cook_client_development_linux:
#  extends: .template_client_development_linux
#  stage: cook
#
#cook_server_development_linux:
#  extends: .template_server_development_linux
#  stage: cook

# Stage

stage_client_development_win64:
  extends: .template_client_development_win64
  stage: stage

stage_server_development_win64:
  extends: .template_server_development_win64
  stage: stage

#stage_client_development_linux:
#  extends: .template_client_development_linux
#  stage: stage
#
#stage_server_development_linux:
#  extends: .template_server_development_linux
#  stage: stage

# Safeguard

#safeguard_client_development_win64:
#  extends: .template_client_development_win64
#  stage: safeguard
#
#safeguard_server_development_win64:
#  extends: .template_server_development_win64
#  stage: safeguard
#
#safeguard_client_development_linux:
#  extends: .template_client_development_linux
#  stage: safeguard
#
#safeguard_server_development_linux:
#  extends: .template_server_development_linux
#  stage: safeguard

# Upload

upload_client_development_win64:
  extends: .template_client_development_win64
  stage: upload

#upload_server_development_win64:
#  extends: .template_server_development_win64
#  stage: upload
      
#upload_client_development_linux:
#  extends: .template_client_development_linux
#  stage: upload
#         
#upload_server_development_linux:
#  extends: .template_server_development_linux
#  stage: upload
